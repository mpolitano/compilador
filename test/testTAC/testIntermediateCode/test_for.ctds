class test_for{

int A[5] ;
float B [56];
boolean C[10];

int pruArreglos(int b, int c ){
        int i;
        A[0] = 2; 
        
        return A[1];
 
        for i = 5 , 10 { //semanticamente correcto, aunq ese ciclo no terminaria
               A[i] = i + 2;
        }
        
}

int main(){

    externinvk("printf", int ,"%d resultado : ", pruArreglos(4,8 ));
    return 1;
    }
}
/*
TAC: [ProgramDecl Op1: test_for , 
LocationDecl int[] Op1: int[] A[5]  , 
LocationDecl float[] Op1: float[] B[56]  ,
 LocationDecl boolean[] Op1: boolean[] C[10]  , 
MethodDecl Op1: pruArreglos , 
LocationDecl int Op1: i , 
ReadArray Op1: int[] A[5] 0 
Op2: 0 Destination: 6 
, WriteArray Op1: 2 Op2: 6 Destination: int[] A[5] 0
 , ReadArray Op1: int[] A[5] 1 Op2: 1 Destination: 8 ,
 Ret Op1: 8 ,
 Assign Op1: 5 Destination: i ,
 PutLabel Op1: For_Loop_10 ,
 LesI Op1: i Op2: 10 Destination: 10
 , JFalse Op1: 10 Op2: End_For_10 , 
AddI Op1: i Op2: 2 Destination: 14 , 
ReadArray Op1: int[] A[5] i Op2: i Destination: 15 , 
WriteArray Op1: 14 Op2: 15 Destination: int[] A[5] i ,
 AddI Op1: i Op2: 1 Destination: i , 
Jmp Op1: For_Loop_10 , 
PutLabel Op1: End_For_10 , 
MethodDeclEnd Op1: pruArreglos , 
MethodDecl Op1: main , 
ParamPush Op1: "%d resultado : " , 
ParamPush Op1: 4 , ParamPush Op1: 8 , 
Call Op1: pruArreglos Destination: 25 ,
 ParamPop , ParamPop ,
 ParamPush Op1: 25 , 
CallExtern Op1: "printf" , 
ParamPop , ParamPop , Ret Op1: 1 , MethodDeclEnd Op1: main ]

*/

